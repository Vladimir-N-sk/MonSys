<rnd>
   type: RndSensor
    net: pseudo
    timeout: 0 100000000
    delay: 3 0
    valtype: 1
    desc: Случайное число от 0 до 1
</rnd>
<rnd2>
   type: RndSensor
    net: pseudo
    timeout: 0 100000000
    delay: 3 0
    valtype: 1
    desc: Случайное число от 0 до 1
</rnd2>
<rnd3>
   type: RndSensor
    net: pseudo
    timeout: 0 100000000
    delay: 3 0
    valtype: 1
    desc: Случайное число от 0 до 1
</rnd3>

<UaVhod.in.epu>
    net: pseudo
    type: ArithmeticRobot
    extends: good220
    parameters: rnd
    expr: 170 + 91*rnd
    desc: ЩСН - Напряжение секции 1
</UaVhod.in.epu>
<UbVhod.in.epu>
    net: pseudo
    type: ArithmeticRobot
    extends: good220    
    parameters: rnd2
    expr: 190 + 91*rnd2
    desc: ЩСН - Напряжение секции 2
</UbVhod.in.epu>
<UcVhod.in.epu>
    net: pseudo
    type: ArithmeticRobot
    extends: good220    
    parameters: rnd3
    expr: 210 + 91*rnd3
    desc: ЩСН - Напряжение секции 2
</UcVhod.in.epu>

<log1>
#    type: LogBackend
    parameters: ALL
    file: /home/monsys/MonSys/monsys.log
    filters: TransparentFilter
</log1>

<log2>
    type: JsonBackend
    parameters: UaVhod.in.epu UbVhod.in.epu   UcVhod.in.epu  descr.sys timeticks.sys time.sys
#    parameters: UaVhod.in.epu
    file: /tmp/monsys.sh
##    file: /var/lib/zabbix/monsys.sh    
    filters: TransparentFilter
</log2>

<snmp>
    timeout: 0 200000000
    delay: 1 000000000
    net: nic
    community: public
    version: 2
    host: 127.0.0.1
</snmp>

<scan.sys>
    extends: snmp
#    type: SNMPScanerSensor
    var: SNMPv2-MIB::sysDescr.0
    valtype: 0
    desc: Компьютер (uname -a)
</scan.sys>


<descr.sys>
    extends: snmp
    type: SNMPSensor
    var: SNMPv2-MIB::sysDescr.0
    valtype: 0
    desc: Компьютер (uname -a)
</descr.sys>

<timeticks.sys>
    extends: snmp
    type: SNMPSensor
     var: .1.3.6.1.2.1.25.1.1.0
#   var: HOST-RESOURCES-MIB::hrSystemUptime
     valtype: 1
     convert: $ / 100
</timeticks.sys>

<time.sys>
   type: Timeticks2TimeStringRobot
    net: pseudo
    parameters: timeticks.sys
    valtype: 0
    measure: д ч:м:с
    desc: Время работы компьютера   (UpTime)
</time.sys>

<avmem.sys>
    desc: Доступная память компьютера
    extends: snmp
# Version SNMP 1 or 2 (default: 1)
    version: 2
#    type: SNMPSensor
    var: HOST-RESOURCES-MIB::hrStorageSize.11
    valtype: 1
    convert: $ / 1024
    measure: Mb
    format: %3.1f
</avmem.sys>


<pseudo>
    type: PseudoNetwork
</pseudo>
<nic>
    type: SNMPNetwork
</nic>

<db>
#    type: PGLBackend
    init: dbname=monsys host=localhost user=postgres
    filters: TimeThresholdFilter
    period: 60 0
    parameters: ALL
    dontattach: timeticks.sys
</db>

<msg>
    type: MSGBackend
    parameters: ALL
</msg>
<good220>
    extends: voltage
    max: 290
    min: 0
    alarm0: 180 > $ || $ > 254
    alarm1: 187 > $ || $ > 242
</good220>

<voltage>
    measure: B
    valtype: 1
    format: %3.1f
</voltage>
