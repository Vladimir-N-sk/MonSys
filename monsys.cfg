<db>
    type: PGLBackend
    init: dbname=monsys host=localhost user=postgres
    filters: TimeThresholdFilter
    period: 60 0
    parameters: ALL
    dontattach: timeticks.sys
</db>


<descr.sys>
    extends: snmp
#    type: SNMPSensor
    var: SNMPv2-MIB::sysDescr.0
    valtype: 0
    desc: Компьютер (uname -a)
</descr.sys>

<timeticks.sys>
    extends: snmp
#    type: SNMPSensor
     var: .1.3.6.1.2.1.25.1.1.0
#   var: HOST-RESOURCES-MIB::hrSystemUptime     
     valtype: 1
     convert: $ / 100
</timeticks.sys>

<time.sys>
 #   type: Timeticks2TimeStringRobot
    net: pseudo
    parameters: timeticks.sys
    valtype: 0
    measure: д ч:м:с
    desc: Время работы компьютера   (UpTime)
</time.sys>

<avmem.sys>
    desc: Доступная память компьютера
    extends: snmp
# Version SNMP 1 or 2 (default: 1)
    version: 2
    type: SNMPSensor
    var: HOST-RESOURCES-MIB::hrStorageSize.11
    valtype: 1
    convert: $ / 1024
    measure: Mb
    format: %3.1f
</avmem.sys>

<rnd>
 #   type: RndSensor
    net: pseudo
    timeout: 0 100000000
    delay: 1 0
    valtype: 1
#    convert: $ * 10
    desc: Случайное число от 0 до 1
</rnd>
<u1.in.shsn>
    net: pseudo
#    type: ArithmeticRobot
    parameters: rnd
    expr: 330 + 91*rnd
    desc: ЩСН - Напряжение секции 1
</u1.in.shsn>

<log1>
    type: LogBackend
    parameters: ALL
##    file: /var/log/monsys.log
    file: /home/monsys/MonSys/monsys.log
    filters: TransparentFilter
</log1>
<pseudo>
    type: PseudoNetwork
</pseudo>
<nic>
    type: SNMPNetwork
</nic>

<snmp>
    timeout: 0 100000000
    delay: 1 000000000
    net: nic
    community: community
    host: localhost
</snmp>
